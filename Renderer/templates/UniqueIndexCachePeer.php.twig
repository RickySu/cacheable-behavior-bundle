
/**
 * Retrieve a single object by{%for Column in Columns%} {{Column.getPhpName()}}{%endfor%}.
 *
 * @param      PropelPDO $con the connection to use
 * @return     {{ObjectClassName}}
 */
 public static function retrieveBy{%for Column in Columns%}{{Column.getPhpName()}}{%endfor%}({%for Column in Columns%}${{Column.getName()}}, {%endfor%}PropelPDO $con=null){
     $CacheKey="Model:{{ObjectClassName}}{%for Column in Columns%}-{{Column.getPhpName()}}{%endfor%}:{%for Column in Columns%}${{Column.getName()}}{%endfor%}";
     $Cache=self::getTagcache();
     if($Object=$Cache->get($CacheKey)){
         return $Object;
     }
     $Criteria=new Criteria();
{%for Column in Columns%}
     $Criteria->add({{peerBuilder.getColumnConstant(Column)}},${{Column.getName()}});
{%endfor%}
     if($Object={{peerBuilder.getPeerClassname()}}::doSelectOne($Criteria,$con)){
         $Cache->set($CacheKey,$Object);
     }
     return $Object;
 }
